{"ast":null,"code":"var _jsxFileName = \"/Users/faithtejada/Desktop/apps/appMontessori/frontend/src/components/passwordReset.jsx\";\nimport React, { Component } from \"react\";\nimport \"../styles/passwordReset.css\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PasswordReset extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.onUserInput = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      }, () => console.log(this.state));\n    };\n\n    this.onResetPassword = async () => {\n      const result = await axios.post( // when we deploy the app needs to point to this:\n      //`https://api.montessoribymonth.com/password_reset`\n      `http://localhost:6002/password_reset`, {\n        email: this.state.email\n      });\n      console.log(result);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      onChange: this.onUserInput,\n      className: \"password-reset-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find Your Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter your email address to reset your password.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.onResetPassword,\n        children: \"Reset password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          this.props.dispatch({\n            type: \"SET_ACCOUNT_MODE\",\n            accountMode: 0\n          });\n          this.props.dispatch({\n            type: \"SET_SCREEN_MODE\",\n            screenMode: 1\n          });\n        },\n        children: \"Return to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    liveUrl: state.liveUrl // this is where what I want from the store\n    // will go\n\n  };\n}\n\nexport default connect(mapStateToProps)(PasswordReset); // this says, here is my component and here is what part\n// of the store I require","map":{"version":3,"sources":["/Users/faithtejada/Desktop/apps/appMontessori/frontend/src/components/passwordReset.jsx"],"names":["React","Component","connect","axios","PasswordReset","state","onUserInput","e","setState","target","id","value","console","log","onResetPassword","result","post","email","render","props","dispatch","type","accountMode","screenMode","mapStateToProps","liveUrl"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,6BAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCI,KADoC,GAC5B,EAD4B;;AAAA,SAIpCC,WAJoC,GAIrBC,CAAD,IAAO;AACnB,WAAKC,QAAL,CAAc;AAAE,SAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAA1B,OAAd,EAAiD,MAC/CC,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAjB,CADF;AAGD,KARmC;;AAAA,SAUpCS,eAVoC,GAUlB,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMZ,KAAK,CAACa,IAAN,EACnB;AACA;AACC,4CAHkB,EAInB;AACEC,QAAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWY;AADpB,OAJmB,CAArB;AAQAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,MAAZ;AACD,KApBmC;AAAA;;AAsBpCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,QAAQ,EAAE,KAAKZ,WAApB;AAAiC,MAAA,SAAS,EAAC,qBAA3C;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAQ,QAAA,OAAO,EAAE,KAAKQ,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AACE,QAAA,OAAO,EAAE,MAAM;AACb,eAAKK,KAAL,CAAWC,QAAX,CAAoB;AAClBC,YAAAA,IAAI,EAAE,kBADY;AAElBC,YAAAA,WAAW,EAAE;AAFK,WAApB;AAIA,eAAKH,KAAL,CAAWC,QAAX,CAAoB;AAClBC,YAAAA,IAAI,EAAE,iBADY;AAElBE,YAAAA,UAAU,EAAE;AAFM,WAApB;AAID,SAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AA7CmC;;AAgDtC,SAASC,eAAT,CAAyBnB,KAAzB,EAAgC;AAC9B,SAAO;AACLoB,IAAAA,OAAO,EAAEpB,KAAK,CAACoB,OADV,CAGL;AACA;;AAJK,GAAP;AAMD;;AAED,eAAevB,OAAO,CAACsB,eAAD,CAAP,CAAyBpB,aAAzB,CAAf,C,CACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/passwordReset.css\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nclass PasswordReset extends Component {\n  state = {};\n\n  // dynamic user input\n  onUserInput = (e) => {\n    this.setState({ [e.target.id]: e.target.value }, () =>\n      console.log(this.state)\n    );\n  };\n\n  onResetPassword = async () => {\n    const result = await axios.post(\n      // when we deploy the app needs to point to this:\n      //`https://api.montessoribymonth.com/password_reset`\n      `http://localhost:6002/password_reset`,\n      {\n        email: this.state.email,\n      }\n    );\n    console.log(result);\n  };\n\n  render() {\n    return (\n      <div onChange={this.onUserInput} className=\"password-reset-page\">\n        <p>Find Your Account</p>\n        <p>Please enter your email address to reset your password.</p>\n        <input type=\"text\" id=\"email\"></input>\n        <button onClick={this.onResetPassword}>Reset password</button>\n        <button\n          onClick={() => {\n            this.props.dispatch({\n              type: \"SET_ACCOUNT_MODE\",\n              accountMode: 0,\n            });\n            this.props.dispatch({\n              type: \"SET_SCREEN_MODE\",\n              screenMode: 1,\n            });\n          }}\n        >\n          Return to login\n        </button>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    liveUrl: state.liveUrl,\n\n    // this is where what I want from the store\n    // will go\n  };\n}\n\nexport default connect(mapStateToProps)(PasswordReset);\n// this says, here is my component and here is what part\n// of the store I require\n"]},"metadata":{},"sourceType":"module"}