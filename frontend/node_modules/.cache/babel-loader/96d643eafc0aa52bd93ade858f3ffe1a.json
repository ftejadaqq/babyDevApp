{"ast":null,"code":"var _jsxFileName = \"/Users/faithtejada/Desktop/apps/appMontessori/frontend/src/components/timeline.jsx\";\nimport React, { Component } from \"react\"; // import TimelinePopup from \"./timelinePopup\";\n\nimport { connect } from \"react-redux\";\nimport \"../styles/timeline.css\";\nimport TimelineDescriptionRowCard from \"./timelineDescriptionRowCard\";\nimport TimelineRowCard from \"./timelineRowCard\";\nimport ShareIcon from \"../images/icons/share.svg\";\nimport InfoIcon from \"../images/icons/info.svg\";\nimport ProfileIcon from \"../images/icons/profile.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Timeline extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      targetCard: \".upto90\"\n    };\n  }\n\n  componentDidMount() {\n    // if the window.location.search.substr(1)'s length is greater than 1\n    // the targetCard equals the window.location.search.substr(1) and scrolls into view\n    // else the targetCard equals the className (based on daysOld) and scrolls into view\n    // AKA looks for the url, if there is something in the url then jumps to that class\n    var targetCard;\n    var url = window.location.href;\n\n    if (url.search(\".upto\") !== -1) {\n      // if (window.location.search.substr(1).length > 0) {\n      console.log(\"the timeline is using the url\");\n      targetCard = document.querySelector(window.location.search.substr(1));\n      targetCard.scrollIntoView();\n    } else {\n      var className = \"\";\n\n      switch (true) {\n        case this.props.daysOld < 90:\n          className = \".upto90\";\n          break;\n\n        case this.props.daysOld > 90 && this.props.daysOld < 180:\n          className = \".upto180\";\n          break;\n\n        case this.props.daysOld > 180 && this.props.daysOld < 270:\n          className = \".upto270\";\n          break;\n\n        case this.props.daysOld > 270 && this.props.daysOld < 360:\n          className = \".upto360\";\n          break;\n\n        case this.props.daysOld > 360 && this.props.daysOld < 450:\n          className = \".upto450\";\n          break;\n\n        case this.props.daysOld > 450 && this.props.daysOld < 540:\n          className = \".upto540\";\n          break;\n\n        case this.props.daysOld > 540 && this.props.daysOld < 630:\n          className = \".upto630\";\n          break;\n\n        case this.props.daysOld > 630:\n          className = \".upto720\";\n          break;\n\n        default:\n          className = \".upto90\";\n      }\n\n      targetCard = document.querySelector(className);\n      targetCard.scrollIntoView();\n      this.setState({\n        targetCard: className\n      }); // used for setting the url pathname to be the classname upon clicking the Share button\n    }\n  }\n\n  render() {\n    console.log(this.props.timelinePopupActive, this.props.daysOld);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-heading\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-heading-title\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Timeline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Development and stage based toys\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scrollable-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-description-row\",\n              children: this.props.timelineDescriptionData.map((timelineDescriptionRowCard, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(TimelineDescriptionRowCard, {\n                    timelineDescriptionRowCard: timelineDescriptionRowCard\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 91,\n                    columnNumber: 25\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 23\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"timeline-row\",\n              children: this.props.timelineData.map((timelineRowCard, index) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(TimelineRowCard, {\n                    timelineRowCard: timelineRowCard\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 23\n                  }, this)\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        className: \"timeline-footer\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timeline-icons\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-icons-profile\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => {\n                this.props.dispatch({\n                  type: \"SET_SCREEN_MODE\",\n                  screenMode: 3 // profile page\n\n                });\n              },\n              src: ProfileIcon,\n              alt: \"profile icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-icons-tips\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              onClick: () => {\n                this.props.dispatch({\n                  type: \"SET_SCREEN_MODE\",\n                  screenMode: 4\n                });\n              },\n              src: InfoIcon,\n              alt: \"info icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-icons-share\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"whatsapp://send?text=https://www.montessoribymonth.com/\" + this.state.targetCard,\n              \"data-action\": \"share/whatsapp/share\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: ShareIcon,\n                alt: \"share icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"timeline-icons-glossary\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              onClick: () => {\n                this.props.dispatch({\n                  type: \"SET_SCREEN_MODE\",\n                  screenMode: 5\n                });\n              },\n              children: \"GLOSSARY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    timelinePopupActive: state.timelinePopupActive,\n    timelineData: state.timelineData,\n    daysOld: state.daysOld,\n    timelineDescriptionData: state.timelineDescriptionData,\n    screenMode: state.screenMode,\n    babyNameInitial: state.babyNameInitial // this is where what I want from the store\n    // goes\n\n  };\n}\n\nexport default connect(mapStateToProps)(Timeline); // this says, here is my component and here is what part\n// of the store I require","map":{"version":3,"sources":["/Users/faithtejada/Desktop/apps/appMontessori/frontend/src/components/timeline.jsx"],"names":["React","Component","connect","TimelineDescriptionRowCard","TimelineRowCard","Timeline","state","targetCard","componentDidMount","url","window","location","href","search","console","log","document","querySelector","substr","scrollIntoView","className","props","daysOld","setState","render","timelinePopupActive","timelineDescriptionData","map","timelineDescriptionRowCard","index","timelineData","timelineRowCard","dispatch","type","screenMode","ProfileIcon","InfoIcon","ShareIcon","mapStateToProps","babyNameInitial"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n// import TimelinePopup from \"./timelinePopup\";\nimport { connect } from \"react-redux\";\nimport \"../styles/timeline.css\";\nimport TimelineDescriptionRowCard from \"./timelineDescriptionRowCard\";\nimport TimelineRowCard from \"./timelineRowCard\";\nimport ShareIcon from \"../images/icons/share.svg\";\nimport InfoIcon from \"../images/icons/info.svg\";\nimport ProfileIcon from \"../images/icons/profile.svg\";\n\nclass Timeline extends Component {\n  state = { targetCard: \".upto90\" };\n  componentDidMount() {\n    // if the window.location.search.substr(1)'s length is greater than 1\n    // the targetCard equals the window.location.search.substr(1) and scrolls into view\n    // else the targetCard equals the className (based on daysOld) and scrolls into view\n    // AKA looks for the url, if there is something in the url then jumps to that class\n    var targetCard;\n\n    var url = window.location.href;\n\n    if (url.search(\".upto\") !== -1) {\n      // if (window.location.search.substr(1).length > 0) {\n      console.log(\"the timeline is using the url\");\n      targetCard = document.querySelector(window.location.search.substr(1));\n      targetCard.scrollIntoView();\n    } else {\n      var className = \"\";\n\n      switch (true) {\n        case this.props.daysOld < 90:\n          className = \".upto90\";\n          break;\n        case this.props.daysOld > 90 && this.props.daysOld < 180:\n          className = \".upto180\";\n          break;\n        case this.props.daysOld > 180 && this.props.daysOld < 270:\n          className = \".upto270\";\n          break;\n        case this.props.daysOld > 270 && this.props.daysOld < 360:\n          className = \".upto360\";\n          break;\n        case this.props.daysOld > 360 && this.props.daysOld < 450:\n          className = \".upto450\";\n          break;\n        case this.props.daysOld > 450 && this.props.daysOld < 540:\n          className = \".upto540\";\n          break;\n        case this.props.daysOld > 540 && this.props.daysOld < 630:\n          className = \".upto630\";\n          break;\n        case this.props.daysOld > 630:\n          className = \".upto720\";\n          break;\n        default:\n          className = \".upto90\";\n      }\n      targetCard = document.querySelector(className);\n      targetCard.scrollIntoView();\n      this.setState({ targetCard: className }); // used for setting the url pathname to be the classname upon clicking the Share button\n    }\n  }\n\n  render() {\n    console.log(this.props.timelinePopupActive, this.props.daysOld);\n    return (\n      <>\n        {/* this pop up will cover the screen when active - not using for now so commented it out*/}\n        {/* {this.props.timelinePopupActive === true && <TimelinePopup />} */}\n\n        <header>\n          <div className=\"timeline-heading\">\n            <div className=\"timeline-heading-title\">\n              <div>\n                <h1>Timeline</h1>\n              </div>\n              <div>\n                <p>Development and stage based toys</p>\n              </div>\n            </div>\n          </div>\n        </header>\n        <main>\n          <div className=\"scrollable-container\">\n            <div className=\"container\">\n              <div className=\"timeline-description-row\">\n                {this.props.timelineDescriptionData.map(\n                  (timelineDescriptionRowCard, index) => {\n                    return (\n                      <div key={index}>\n                        <TimelineDescriptionRowCard\n                          timelineDescriptionRowCard={\n                            timelineDescriptionRowCard\n                          }\n                        />\n                      </div>\n                    );\n                  }\n                )}\n              </div>\n              <div className=\"timeline-row\">\n                {this.props.timelineData.map((timelineRowCard, index) => {\n                  return (\n                    <div key={index}>\n                      <TimelineRowCard timelineRowCard={timelineRowCard} />\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </main>\n        <footer className=\"timeline-footer\">\n          <div className=\"timeline-icons\">\n            <div className=\"timeline-icons-profile\">\n              <img\n                onClick={() => {\n                  this.props.dispatch({\n                    type: \"SET_SCREEN_MODE\",\n                    screenMode: 3, // profile page\n                  });\n                }}\n                src={ProfileIcon}\n                alt=\"profile icon\"\n              ></img>\n            </div>\n            <div className=\"timeline-icons-tips\">\n              <img\n                onClick={() => {\n                  this.props.dispatch({\n                    type: \"SET_SCREEN_MODE\",\n                    screenMode: 4,\n                  });\n                }}\n                src={InfoIcon}\n                alt=\"info icon\"\n              ></img>\n            </div>\n            <div className=\"timeline-icons-share\">\n              <a\n                href={\n                  \"whatsapp://send?text=https://www.montessoribymonth.com/\" +\n                  this.state.targetCard\n                }\n                data-action=\"share/whatsapp/share\"\n              >\n                <img src={ShareIcon} alt=\"share icon\"></img>\n                {/*  my domain name/[className] */}\n              </a>\n            </div>\n            <div className=\"timeline-icons-glossary\">\n              <p\n                onClick={() => {\n                  this.props.dispatch({\n                    type: \"SET_SCREEN_MODE\",\n                    screenMode: 5,\n                  });\n                }}\n              >\n                GLOSSARY\n              </p>\n            </div>\n          </div>\n        </footer>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    timelinePopupActive: state.timelinePopupActive,\n    timelineData: state.timelineData,\n    daysOld: state.daysOld,\n    timelineDescriptionData: state.timelineDescriptionData,\n    screenMode: state.screenMode,\n    babyNameInitial: state.babyNameInitial,\n\n    // this is where what I want from the store\n    // goes\n  };\n}\n\nexport default connect(mapStateToProps)(Timeline);\n// this says, here is my component and here is what part\n// of the store I require\n"]},"metadata":{},"sourceType":"module"}