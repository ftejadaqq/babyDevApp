{"ast":null,"code":"var _jsxFileName = \"/Users/faithtejada/Desktop/apps/appMontessori/frontend/src/components/login.jsx\";\nimport React, { Component } from \"react\";\nimport \"../styles/login.css\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n\n    this.onUserInput = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      }, () => console.log(this.state));\n    };\n\n    this.onSubmit = async () => {\n      const result = await axios.post(`${this.props.liveUrl}/login`, {\n        email: this.state.email,\n        password: this.state.password\n      });\n\n      if (result.data.user_authenticated === true) {\n        this.props.dispatch({\n          type: \"SET_SCREEN_MODE\",\n          screenMode: 2\n        });\n      } else {\n        alert(\"Incorrect login details, try again\"); // edit to not an alert\n        // redirect back to login page\n      }\n\n      console.log(result);\n    };\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // login form\n      _jsxDEV(\"div\", {\n        className: \"login-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onChange: this.onUserInput,\n          className: \"login-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"login-heading\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"login-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                id: \"email\",\n                className: \"email\",\n                placeholder: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                id: \"password\",\n                className: \"password\",\n                placeholder: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-item\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => {\n                  this.props.dispatch({\n                    type: \"SET_ACCOUNT_MODE\",\n                    accountMode: 2\n                  });\n                  this.props.dispatch({\n                    type: \"SET_SCREEN_MODE\",\n                    screenMode: 1\n                  });\n                },\n                children: \"Forgotten account?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-form-button\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"login-submit-button\",\n                onClick: this.onSubmit,\n                id: \"login-button\",\n                children: \"SUBMIT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"login-go-to-signup\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                onClick: () => {\n                  this.props.dispatch({\n                    type: \"SET_ACCOUNT_MODE\",\n                    accountMode: 1\n                  });\n                  this.props.dispatch({\n                    type: \"SET_SCREEN_MODE\",\n                    screenMode: 1\n                  });\n                },\n                children: \"Sign up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this)\n    );\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    liveUrl: state.liveUrl // this is where what I want from the store\n    // will go\n\n  };\n}\n\nexport default connect(mapStateToProps)(Login); // this says, here is my component and here is what part\n// of the store I require","map":{"version":3,"sources":["/Users/faithtejada/Desktop/apps/appMontessori/frontend/src/components/login.jsx"],"names":["React","Component","connect","axios","Login","state","onUserInput","e","setState","target","id","value","console","log","onSubmit","result","post","props","liveUrl","email","password","data","user_authenticated","dispatch","type","screenMode","alert","render","accountMode","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/login.css\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\n\nclass Login extends Component {\n  state = {};\n\n  // dynamic user input\n  onUserInput = (e) => {\n    this.setState({ [e.target.id]: e.target.value }, () =>\n      console.log(this.state)\n    );\n  };\n\n  // object you send is called the action\n  // onSubmit sets state email and password for then axios checks if the details match what\n  // was saved at the signup stage in the database\n  onSubmit = async () => {\n    const result = await axios.post(`${this.props.liveUrl}/login`, {\n      email: this.state.email,\n      password: this.state.password,\n    });\n\n    if (result.data.user_authenticated === true) {\n      this.props.dispatch({\n        type: \"SET_SCREEN_MODE\",\n        screenMode: 2,\n      });\n    } else {\n      alert(\"Incorrect login details, try again\"); // edit to not an alert\n      // redirect back to login page\n    }\n    console.log(result);\n  };\n\n  render() {\n    return (\n      // login form\n      <div className=\"login-page\">\n        <div onChange={this.onUserInput} className=\"login-container\">\n          <h1 className=\"login-heading\">Log in</h1>\n          <div className=\"login-form\">\n            <div className=\"login-form-item\">\n              <label htmlFor=\"email\"></label>\n              <input\n                type=\"email\"\n                id=\"email\"\n                className=\"email\"\n                placeholder=\"Email\"\n              />\n            </div>\n            <div className=\"login-form-item\">\n              <label htmlFor=\"password\"></label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                className=\"password\"\n                placeholder=\"Password\"\n              />\n            </div>\n            <div className=\"login-form-item\">\n              <p\n                onClick={() => {\n                  this.props.dispatch({\n                    type: \"SET_ACCOUNT_MODE\",\n                    accountMode: 2,\n                  });\n                  this.props.dispatch({\n                    type: \"SET_SCREEN_MODE\",\n                    screenMode: 1,\n                  });\n                }}\n              >\n                Forgotten account?\n              </p>\n            </div>\n            <div className=\"login-form-button\">\n              <button\n                className=\"login-submit-button\"\n                onClick={this.onSubmit}\n                id=\"login-button\"\n              >\n                SUBMIT\n              </button>\n            </div>\n\n            <div className=\"login-go-to-signup\">\n              <p\n                onClick={() => {\n                  this.props.dispatch({\n                    type: \"SET_ACCOUNT_MODE\",\n                    accountMode: 1,\n                  });\n                  this.props.dispatch({\n                    type: \"SET_SCREEN_MODE\",\n                    screenMode: 1,\n                  });\n                }}\n              >\n                Sign up\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    liveUrl: state.liveUrl,\n    // this is where what I want from the store\n    // will go\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n// this says, here is my component and here is what part\n// of the store I require\n"]},"metadata":{},"sourceType":"module"}