{"ast":null,"code":"import _regeneratorRuntime from\"/Users/faithtejada/Desktop/apps/appMontessori/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/faithtejada/Desktop/apps/appMontessori/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/Users/faithtejada/Desktop/apps/appMontessori/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/faithtejada/Desktop/apps/appMontessori/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/faithtejada/Desktop/apps/appMontessori/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/faithtejada/Desktop/apps/appMontessori/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/faithtejada/Desktop/apps/appMontessori/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import\"../styles/passwordReset.css\";import{connect}from\"react-redux\";import axios from\"axios\";import PasswordResetPopup from\"./passwordResetPopup\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var PasswordReset=/*#__PURE__*/function(_Component){_inherits(PasswordReset,_Component);var _super=_createSuper(PasswordReset);function PasswordReset(){var _this;_classCallCheck(this,PasswordReset);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.onUserInput=function(e){_this.setState(_defineProperty({},e.target.id,e.target.value),function(){return console.log(_this.state);});};_this.onResetPassword=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(// when we deploy the app needs to point to this the correct liveUrl in index.js\n\"\".concat(_this.props.liveUrl,\"/password_reset\"),{email:_this.state.email});case 2:result=_context.sent;if(result.data.password_reset===true){_this.props.dispatch({type:\"SET_PASSWORD_RESET_POPUP_ACTIVE\"});}console.log(result);case 5:case\"end\":return _context.stop();}}},_callee);}));return _this;}_createClass(PasswordReset,[{key:\"render\",value:function render(){var _this2=this;console.log(this.props.liveUrl);return/*#__PURE__*/_jsxs(_Fragment,{children:[this.props.passwordResetPopupActive===true&&/*#__PURE__*/_jsx(PasswordResetPopup,{}),/*#__PURE__*/_jsxs(\"div\",{onChange:this.onUserInput,className:\"password-reset-page\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Find Your Account\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Please enter your email address to have a new password sent to you.\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"email\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-reset-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:this.onResetPassword,children:\"Reset password\"}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){_this2.props.dispatch({type:\"SET_ACCOUNT_MODE\",accountMode:0});_this2.props.dispatch({type:\"SET_SCREEN_MODE\",screenMode:1});},children:\"Return to login\"})]})]})]});}}]);return PasswordReset;}(Component);function mapStateToProps(state){return{liveUrl:state.liveUrl,passwordResetPopupActive:state.passwordResetPopupActive// this is where what I want from the store\n// will go\n};}export default connect(mapStateToProps)(PasswordReset);// this says, here is my component and here is what part\n// of the store I require","map":{"version":3,"sources":["/Users/faithtejada/Desktop/apps/appMontessori/frontend/src/components/passwordReset.jsx"],"names":["React","Component","connect","axios","PasswordResetPopup","PasswordReset","onUserInput","e","setState","target","id","value","console","log","state","onResetPassword","post","props","liveUrl","email","result","data","password_reset","dispatch","type","passwordResetPopupActive","accountMode","screenMode","mapStateToProps"],"mappings":"0qCAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAO,6BAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,C,gJAEMC,CAAAA,a,uVAEJC,W,CAAc,SAACC,CAAD,CAAO,CACnB,MAAKC,QAAL,oBAAiBD,CAAC,CAACE,MAAF,CAASC,EAA1B,CAA+BH,CAAC,CAACE,MAAF,CAASE,KAAxC,EAAiD,iBAC/CC,CAAAA,OAAO,CAACC,GAAR,CAAY,MAAKC,KAAjB,CAD+C,EAAjD,EAGD,C,OAEDC,e,sEAAkB,oKACKZ,CAAAA,KAAK,CAACa,IAAN,CACnB;AADmB,UAEhB,MAAKC,KAAL,CAAWC,OAFK,oBAGnB,CACEC,KAAK,CAAE,MAAKL,KAAL,CAAWK,KADpB,CAHmB,CADL,QACVC,MADU,eAShB,GAAIA,MAAM,CAACC,IAAP,CAAYC,cAAZ,GAA+B,IAAnC,CAAyC,CACvC,MAAKL,KAAL,CAAWM,QAAX,CAAoB,CAClBC,IAAI,CAAE,iCADY,CAApB,EAGD,CACDZ,OAAO,CAACC,GAAR,CAAYO,MAAZ,EAdgB,sD,iEAiBlB,iBAAS,iBACPR,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWC,OAAvB,EACA,mBACE,2BAEG,KAAKD,KAAL,CAAWQ,wBAAX,GAAwC,IAAxC,eAAgD,KAAC,kBAAD,IAFnD,cAIE,aAAK,QAAQ,CAAE,KAAKnB,WAApB,CAAiC,SAAS,CAAC,qBAA3C,wBACE,yCADF,cAEE,0FAFF,cAKE,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,OAAtB,EALF,cAME,aAAK,SAAS,CAAC,wBAAf,wBACE,eAAQ,OAAO,CAAE,KAAKS,eAAtB,4BADF,cAEE,eACE,OAAO,CAAE,kBAAM,CACb,MAAI,CAACE,KAAL,CAAWM,QAAX,CAAoB,CAClBC,IAAI,CAAE,kBADY,CAElBE,WAAW,CAAE,CAFK,CAApB,EAIA,MAAI,CAACT,KAAL,CAAWM,QAAX,CAAoB,CAClBC,IAAI,CAAE,iBADY,CAElBG,UAAU,CAAE,CAFM,CAApB,EAID,CAVH,6BAFF,GANF,GAJF,GADF,CA+BD,C,2BA1DyB1B,S,EA6D5B,QAAS2B,CAAAA,eAAT,CAAyBd,KAAzB,CAAgC,CAC9B,MAAO,CACLI,OAAO,CAAEJ,KAAK,CAACI,OADV,CAELO,wBAAwB,CAAEX,KAAK,CAACW,wBAChC;AACA;AAJK,CAAP,CAMD,CAED,cAAevB,CAAAA,OAAO,CAAC0B,eAAD,CAAP,CAAyBvB,aAAzB,CAAf,CACA;AACA","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/passwordReset.css\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport PasswordResetPopup from \"./passwordResetPopup\";\n\nclass PasswordReset extends Component {\n  // dynamic user input\n  onUserInput = (e) => {\n    this.setState({ [e.target.id]: e.target.value }, () =>\n      console.log(this.state)\n    );\n  };\n\n  onResetPassword = async () => {\n    const result = await axios.post(\n      // when we deploy the app needs to point to this the correct liveUrl in index.js\n      `${this.props.liveUrl}/password_reset`,\n      {\n        email: this.state.email,\n      }\n    );\n\n    if (result.data.password_reset === true) {\n      this.props.dispatch({\n        type: \"SET_PASSWORD_RESET_POPUP_ACTIVE\",\n      });\n    }\n    console.log(result);\n  };\n\n  render() {\n    console.log(this.props.liveUrl);\n    return (\n      <>\n        {/* this pop up will cover the screen when active */}\n        {this.props.passwordResetPopupActive === true && <PasswordResetPopup />}\n\n        <div onChange={this.onUserInput} className=\"password-reset-page\">\n          <h1>Find Your Account</h1>\n          <p>\n            Please enter your email address to have a new password sent to you.\n          </p>\n          <input type=\"text\" id=\"email\"></input>\n          <div className=\"password-reset-buttons\">\n            <button onClick={this.onResetPassword}>Reset password</button>\n            <button\n              onClick={() => {\n                this.props.dispatch({\n                  type: \"SET_ACCOUNT_MODE\",\n                  accountMode: 0,\n                });\n                this.props.dispatch({\n                  type: \"SET_SCREEN_MODE\",\n                  screenMode: 1,\n                });\n              }}\n            >\n              Return to login\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    liveUrl: state.liveUrl,\n    passwordResetPopupActive: state.passwordResetPopupActive,\n    // this is where what I want from the store\n    // will go\n  };\n}\n\nexport default connect(mapStateToProps)(PasswordReset);\n// this says, here is my component and here is what part\n// of the store I require\n"]},"metadata":{},"sourceType":"module"}